repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files

  - repo: https://github.com/gabrielvieira1/precommit-hook-custom
    rev: 7982aef9bdb2c177537346a55357e1465294f973
    hooks:
      - id: hello-custom-hook
      - id: secure-dependencies
      - id: owasp-dependency-check

  # - repo: local
  #   hooks:
  #     - id: gitleaks-local
  #       name: GitLeaks Secrets Scanner
  #       description: Detect hardcoded secrets like passwords, api keys, and tokens in git repos
  #       entry: bash -c "echo '🕵️  Executando GitLeaks via Docker...' && mkdir -p logs && docker run --rm -v $(pwd):/path zricethezav/gitleaks:latest detect --source=/path --no-git --verbose > logs/gitleaks.log 2>&1; EXIT_CODE=$?; echo '📋 Resultados salvos em logs/gitleaks.log'; exit $EXIT_CODE"
  #       language: system
  #       stages: [pre-commit]
  #       pass_filenames: false

  # - repo: local
  #   hooks:
  #     - id: semgrep-sast
  #       name: Semgrep SAST Scanner
  #       description: Static analysis security testing with Semgrep
  #       entry: bash -c "echo '🔎 Executando Semgrep SAST via Docker...' && mkdir -p logs && docker run --rm -v $(pwd):/src returntocorp/semgrep semgrep --config=auto --error --json /src > logs/semgrep.log 2>&1; EXIT_CODE=$?; echo '📋 Resultados salvos em logs/semgrep.log'; exit $EXIT_CODE"
  #       language: system
  #       stages: [pre-commit]
  #       pass_filenames: false

  - repo: local
    hooks:
      - id: vulnerability-summary
        name: Security Summary Report
        description: Display executive security summary using custom script
        entry: bash -c "echo '📊 Gerando resumo executivo de segurança...' && chmod +x ./scripts/security-summary.sh && ./scripts/security-summary.sh && echo '✅ Resumo de segurança concluído'"
        language: system
        stages: [pre-commit]
        pass_filenames: false
        always_run: true
        verbose: true

  - repo: local
    hooks:
      - id: vulnerability-summary-ai
        name: Generate AI Vulnerability Summary
        description: Generates a Markdown summary of security scan results using the Gemini API.
        entry: python3 scripts/vulnerability_summary.py
        language: python
        stages: [pre-commit]
        pass_filenames: false
        always_run: true
        additional_dependencies: [google-generativeai, python-dotenv]

  # - repo: local
  #   hooks:
  #     - id: bandit-python-sast
  #       name: Bandit Python Security Scanner
  #       description: Security linter for Python code
  #       entry: bash -c "echo '🐍 Executando Bandit Python SAST...' && mkdir -p logs && if find . -name '*.py' -not -path './.git/*' -not -path './logs/*' | head -1 | grep -q .; then docker run --rm -v $(pwd):/src --workdir /src python:3.11-slim bash -c 'pip install bandit > /dev/null 2>&1 && bandit -r . -f json' > logs/bandit.log 2>&1; EXIT_CODE=$?; if [ $EXIT_CODE -ne 0 ]; then echo '❌ Vulnerabilidades Python encontradas!'; fi; echo '📋 Resultados salvos em logs/bandit.log'; exit $EXIT_CODE; else echo 'ℹ️  Nenhum arquivo Python encontrado, pulando Bandit...'; exit 0; fi"
  #       language: system
  #       stages: [pre-commit]
  #       pass_filenames: false
